{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\froman\fcharset0 Times-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
In this assignment we are to do an 
\f1\b extended
\f0\b0  version Unit 3 Assignment 2 WITHOUT the benefit of the ANTLR generated parser and lexer. That is, you must meet the requirements by creating code from scratch. Recall the sample:\
\'a0\
LET A = 4\
LET B = 5\
LET C = A * B + 7\
PRINT A\
PRINT " * "\
PRINT B\
PRINT " + 7 = "\
PRINTLN C\
\'a0\
Your program should parse and execute this input as it did for Unit 3.\
\'a0\
The output was:\
\'a0\
4*5+7=27\
\'a0\
\pard\pardeftab720\partightenfactor0

\f2\i\b \cf2 You may use any programming language you like except esoteric and funcational.
\f0\i0\b0  I recommend that you structure your program\'a0 in a manner similar to the structure in the grammar, especially for expression evaluation. That is, create functions that mimic the operations performed in the grammar rules.\
\'a0\
The \'93
\f1\b extended
\f0\b0 \'94 bit is the addition of integer division to expression evaluation which you may have noticed was not in expr.g. Recall that multiplcation and division has the same precedence.\
\'a0\
A sample:\
\'a0\
LET H = 8\
PRINTLN H / 2\
PRINTLN 64/16\
\'a0\
Output:\
\'a0\
4\
4\
\'a0\
Do not use any code generated by ANTLR or any other compiler compiler.\
}